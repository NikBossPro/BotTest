import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
TOKEN = "7592922381:AAHT6g2M8uD3WM2NRet3Gt-fh80Hw7nBv2w"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="ü§ñ –ë–æ—Ç –û—Ç–µ—Ü")],
        [KeyboardButton(text="üîë –ú–æ–π –¢–æ–∫–µ–Ω")],
        [KeyboardButton(text="üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞")],
        [KeyboardButton(text="üë§ –ú–æ–π –í–ö")],
        [KeyboardButton(text="üöÄ –°–ø–∏–¥ —Ç–µ—Å—Ç")]
    ],
    resize_keyboard=True
)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_command(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.")
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å! –Ø –∏—Å–ø–æ–ª—å–∑—É—é—Å—å –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞. "
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:",
        reply_markup=menu
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "ü§ñ –ë–æ—Ç –û—Ç–µ—Ü"
@dp.message(lambda message: message.text == "ü§ñ –ë–æ—Ç –û—Ç–µ—Ü")
async def bot_father(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Å—ã–ª–∫—É –Ω–∞ –ë–æ—Ç–∞ –û—Ç—Ü–∞.")
    await message.answer("–°—Å—ã–ª–∫–∞ –Ω–∞ –ë–æ—Ç–∞ –û—Ç—Ü–∞: https://t.me/BotFather")
    await message.answer("–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –µ—â—ë?", reply_markup=menu)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üîë –ú–æ–π –¢–æ–∫–µ–Ω"
@dp.message(lambda message: message.text == "üîë –ú–æ–π –¢–æ–∫–µ–Ω")
async def my_token(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Ç–æ–∫–µ–Ω.")
    await message.answer(f"–í–∞—à —Ç–æ–∫–µ–Ω: {TOKEN}")
    await message.answer("–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –µ—â—ë?", reply_markup=menu)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞"
@dp.message(lambda message: message.text == "üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞")
async def creation_date(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞.")
    await message.answer("–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞: 10 —Ñ–µ–≤—Ä–∞–ª—è 2025 –≥–æ–¥–∞.")
    await message.answer("–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –µ—â—ë?", reply_markup=menu)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üë§ –¢–æ–π –í–ö"
@dp.message(lambda message: message.text == "üë§ –¢–æ–π –í–ö")
async def vk_link(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Å—ã–ª–∫—É –Ω–∞ –í–ö.")
    await message.answer("–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –í–ö: https://vk.com/id107950651")
    await message.answer("–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –µ—â—ë?", reply_markup=menu)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üöÄ –°–ø–∏–¥ —Ç–µ—Å—Ç"
@dp.message(lambda message: message.text == "üöÄ –°–ø–∏–¥ —Ç–µ—Å—Ç")
async def speed_test(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Å—ã–ª–∫—É –Ω–∞ Speedtest.")
    await message.answer("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞: https://www.speedtest.net/")
    await message.answer("–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –µ—â—ë?", reply_markup=menu)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")